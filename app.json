{
  "addons": ["heroku-postgresql:standard-0", "newrelic:wayne", "rediscloud:30"],
  "buildpacks": [
    {
      "url": "https://github.com/heroku/heroku-buildpack-apt"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nodejs"
    },
    {
      "url": "https://github.com/moneymeets/python-poetry-buildpack"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-python"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-pgbouncer"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nginx"
    }
  ],
  "description": " ",
  "env": {
    "AUTH_CHANGE_EMAIL_TTL_IN_MINUTES": {
      "description": "Expiry time for a change email request, default is 1440 minutes(1 day)",
      "required": false
    },
    "AWS_ACCESS_KEY_ID": {
      "description": "AWS Access Key for S3 storage.",
      "required": false
    },
    "AWS_QUERYSTRING_AUTH": {
      "description": "Enables querystring auth for S3 urls",
      "required": false
    },
    "AWS_SECRET_ACCESS_KEY": {
      "description": "AWS Secret Key for S3 storage.",
      "required": false
    },
    "AWS_STORAGE_BUCKET_NAME": {
      "description": "S3 Bucket name.",
      "required": false
    },
    "BASKET_EXPIRY_DAYS": {
      "description": "Expiry life span of a basket in days",
      "required": false
    },
    "BLOG_CACHE_TIMEOUT": {
      "description": "How long the blog should be cached",
      "required": false
    },
    "CELERY_BROKER_URL": {
      "description": "Where celery should get tasks, default is Redis URL",
      "required": false
    },
    "CELERY_RESULT_BACKEND": {
      "description": "Where celery should put task results, default is Redis URL",
      "required": false
    },
    "CELERY_TASK_EAGER_PROPAGATES": {
      "description": "Early executed tasks propagate exceptions",
      "required": false
    },
    "CERTIFICATE_CREATION_DELAY_IN_HOURS": {
      "description": "The number of hours to delay automated certificate creation after a course run ends.",
      "required": false
    },
    "CLOUDFRONT_DIST": {
      "description": "The Cloundfront distribution to use for static assets",
      "required": false
    },
    "COUPON_REQUEST_SHEET_ID": {
      "description": "ID of the Google Sheet that contains requests for coupons",
      "required": false
    },
    "CRON_BASKET_DELETE_DAYS": {
      "description": "'days' value for the 'delete-expired-baskets' scheduled task (defaults to everyday)",
      "required": false
    },
    "CRON_BASKET_DELETE_HOURS": {
      "description": "'hours' value for the 'delete-expired-baskets' scheduled task (defaults to midnight)",
      "required": false
    },
    "CRON_COURSERUN_SYNC_DAYS": {
      "description": "'day_of_week' value for 'sync-courseruns-data' scheduled task (default will run once a day).",
      "required": false
    },
    "CRON_COURSERUN_SYNC_HOURS": {
      "description": "'hours' value for the 'sync-courseruns-data' scheduled task (defaults to midnight)",
      "required": false
    },
    "CRON_COURSE_CERTIFICATES_DAYS": {
      "description": "'day_of_week' value for 'generate-course-certificate' scheduled task (default will run once a day).",
      "required": false
    },
    "CRON_COURSE_CERTIFICATES_HOURS": {
      "description": "'hours' value for the 'generate-course-certificate' scheduled task (defaults to midnight)",
      "required": false
    },
    "CRON_EXTERNAL_COURSERUN_SYNC_DAYS": {
      "description": "'day_of_week' value for 'sync-external-course-runs' scheduled task (default will run once a day).",
      "required": false
    },
    "CRON_EXTERNAL_COURSERUN_SYNC_HOURS": {
      "description": "'hours' value for the 'sync-external-course-runs' scheduled task (defaults to midnight)",
      "required": false
    },
    "CSRF_TRUSTED_ORIGINS": {
      "description": "Comma separated string of trusted domains that should be CSRF exempt",
      "required": false
    },
    "CYBERSOURCE_ACCESS_KEY": {
      "description": "CyberSource Access Key",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_ADDRESS_OPERATOR": {
      "description": "Whether just the name or the name and address should be used in exports verification. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_ADDRESS_WEIGHT": {
      "description": "The weight of the address in determining whether a user passes exports checks. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_NAME_WEIGHT": {
      "description": "The weight of the name in determining whether a user passes exports checks. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_SANCTIONS_LISTS": {
      "description": "Additional sanctions lists to validate for exports. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_INQUIRY_LOG_NACL_ENCRYPTION_KEY": {
      "description": "The public key to encrypt export results with for our own security purposes. Should be a base64 encoded NaCl public key.",
      "required": false
    },
    "CYBERSOURCE_MERCHANT_ID": {
      "description": "The cybersource merchant id",
      "required": false
    },
    "CYBERSOURCE_PROFILE_ID": {
      "description": "CyberSource Profile ID",
      "required": false
    },
    "CYBERSOURCE_SECURE_ACCEPTANCE_URL": {
      "description": "CyberSource API endpoint",
      "required": false
    },
    "CYBERSOURCE_SECURITY_KEY": {
      "description": "CyberSource API key",
      "required": false
    },
    "CYBERSOURCE_TRANSACTION_KEY": {
      "description": "The cybersource transaction key",
      "required": false
    },
    "CYBERSOURCE_WSDL_URL": {
      "description": "The URL to the cybersource WSDL",
      "required": false
    },
    "DEFERRAL_REQUEST_WORKSHEET_ID": {
      "description": "ID of the worksheet within the enrollment change request spreadsheet that contains enrollment deferral requests",
      "required": false
    },
    "DIGITAL_CREDENTIALS_DEEP_LINK_URL": {
      "description": "URL at which to deep link the learner to for the digital credentials wallet",
      "required": false
    },
    "DIGITAL_CREDENTIALS_ISSUER_ID": {
      "description": "Issuer identifier for digital credentials",
      "required": false
    },
    "DIGITAL_CREDENTIALS_SUPPORTED_RUNS": {
      "description": "Comma separated string of course/program runs/Ids that support digital credentials",
      "required": false
    },
    "DIGITAL_CREDENTIALS_VERIFICATION_METHOD": {
      "description": "Verification method for digital credentials",
      "required": false
    },
    "DJANGO_LOG_LEVEL": {
      "description": "The log level for django",
      "required": false
    },
    "DRIVE_API_PROJECT_ID": {
      "description": "ID for the Google API project where the credentials were created",
      "required": false
    },
    "DRIVE_CLIENT_ID": {
      "description": "Client ID from Google API credentials",
      "required": false
    },
    "DRIVE_CLIENT_SECRET": {
      "description": "Client secret from Google API credentials",
      "required": false
    },
    "DRIVE_OUTPUT_FOLDER_ID": {
      "description": "ID of the Drive folder where newly created Sheets should be kept",
      "required": false
    },
    "DRIVE_SERVICE_ACCOUNT_CREDS": {
      "description": "The contents of the Service Account credentials JSON to use for Google API auth",
      "required": false
    },
    "DRIVE_SHARED_ID": {
      "description": "ID of the Shared Drive (a.k.a. Team Drive). This is equal to the top-level folder ID.",
      "required": false
    },
    "DRIVE_WEBHOOK_ASSIGNMENT_MAX_AGE_DAYS": {
      "description": "The number of days from the last update that a coupon assignment sheet should still be considered 'fresh', i.e.: should still be monitored for changes via webhook/file watch.",
      "required": false
    },
    "DRIVE_WEBHOOK_ASSIGNMENT_WAIT": {
      "description": "The number of seconds to wait to process a coupon assignment sheet after we receive a webhook request from that sheet. The task to process the sheet is scheduled this many seconds in the future.",
      "required": false
    },
    "DRIVE_WEBHOOK_CHANNEL_ID": {
      "description": "Channel ID to use for requests to get push notifications for file changes",
      "required": false
    },
    "DRIVE_WEBHOOK_EXPIRATION_MINUTES": {
      "description": "The number of minutes after creation that a webhook (push notification) for a Drive file will expire (Google does not accept an expiration beyond 24 hours, and if the expiration is not provided via API, it defaults to 1 hour).",
      "required": false
    },
    "DRIVE_WEBHOOK_RENEWAL_PERIOD_MINUTES": {
      "description": "The maximum time difference (in minutes) from the present time to a webhook expiration date to consider a webhook 'fresh', i.e.: not in need of renewal. If the time difference is less than this value, the webhook should be renewed.",
      "required": false
    },
    "ECOMMERCE_FORCE_PROFILE_COUNTRY": {
      "description": "Force the country determination to be done with the user profile only",
      "required": false
    },
    "EDX_API_CLIENT_TIMEOUT": {
      "description": "Timeout (in seconds) for requests made via the edX API client",
      "required": false
    },
    "ENROLLMENT_CHANGE_SHEET_ID": {
      "description": "ID of the Google Sheet that contains the enrollment change request worksheets (refunds, transfers, etc)",
      "required": false
    },
    "EXTERNAL_COURSE_SYNC_API_BASE_URL": {
      "description": "Base API URL for external course sync API",
      "required": false
    },
    "EXTERNAL_COURSE_SYNC_API_KEY": {
      "description": "The API Key for external course sync API",
      "required": true
    },
    "EXTERNAL_COURSE_SYNC_API_REQUEST_TIMEOUT": {
      "description": "API request timeout for external course sync APIs in seconds",
      "required": false
    },
    "GA_TRACKING_ID": {
      "description": "Google analytics tracking ID",
      "required": false
    },
    "GOOGLE_DOMAIN_VERIFICATION_TAG_VALUE": {
      "description": "The value of the meta tag used by Google to verify the owner of a domain (used for enabling push notifications)",
      "required": false
    },
    "GTM_TRACKING_ID": {
      "description": "Google Tag Manager container ID",
      "required": false
    },
    "HEROKU_APP_NAME": {
      "description": "The name of the review app",
      "required": false
    },
    "HOST_IP": {
      "description": "This server's host IP",
      "required": false
    },
    "HUBSPOT_CREATE_USER_FORM_ID": {
      "description": "Form ID for Hubspot Forms API",
      "required": false
    },
    "HUBSPOT_ENTERPRISE_PAGE_FORM_ID": {
      "description": "Form ID for Hubspot for Enterprise Page",
      "required": false
    },
    "HUBSPOT_FOOTER_FORM_GUID": {
      "description": "Form guid over hub spot for footer block.",
      "required": false
    },
    "HUBSPOT_MAX_CONCURRENT_TASKS": {
      "description": "Max number of concurrent Hubspot tasks to run",
      "required": false
    },
    "HUBSPOT_NEW_COURSES_FORM_GUID": {
      "description": "Form guid over hub spot for new courses email subscription form.",
      "required": false
    },
    "HUBSPOT_PIPELINE_ID": {
      "description": "Hubspot ID for the ecommerce pipeline",
      "required": false
    },
    "HUBSPOT_PORTAL_ID": {
      "description": "Hub spot portal id.",
      "required": false
    },
    "HUBSPOT_TASK_DELAY": {
      "description": "Number of milliseconds to wait between consecutive Hubspot calls",
      "required": false
    },
    "LOGOUT_REDIRECT_URL": {
      "description": "Url to redirect to after logout, typically Open edX's own logout url",
      "required": false
    },
    "MAILGUN_BATCH_CHUNK_SIZE": {
      "description": "Maximum number of emails to send in a batch",
      "required": false
    },
    "MAILGUN_FROM_EMAIL": {
      "description": "Email which mail comes from",
      "required": false
    },
    "MAILGUN_KEY": {
      "description": "The token for authenticating against the Mailgun API",
      "required": true
    },
    "MAILGUN_SENDER_DOMAIN": {
      "description": "The domain to send mailgun email through",
      "required": true
    },
    "MEDIA_ROOT": {
      "description": "The root directory for locally stored media. Typically not used.",
      "required": false
    },
    "MITOL_AUTHENTICATION_FROM_EMAIL": {
      "description": "E-mail to use for the from field",
      "required": false
    },
    "MITOL_AUTHENTICATION_REPLY_TO_ADDRESS": {
      "description": "E-mail to use for reply-to address of emails",
      "required": false
    },
    "MITOL_DIGITAL_CREDENTIALS_AUTH_TYPE": {
      "description": "Auth type that is passed to the digital credentials wallet app",
      "required": false
    },
    "MITOL_DIGITAL_CREDENTIALS_DEEP_LINK_URL": {
      "description": "URL at which to deep link the learner to for the digital credentials wallet",
      "required": false
    },
    "MITOL_DIGITAL_CREDENTIALS_HMAC_SECRET": {
      "description": "HMAC secret to sign digital credentials requests with",
      "required": false
    },
    "MITOL_DIGITAL_CREDENTIALS_VERIFY_SERVICE_BASE_URL": {
      "description": "Base URL for sing-and-verify service to call for digital credentials",
      "required": false
    },
    "MITOL_HUBSPOT_API_ID_PREFIX": {
      "description": "The prefix to use for hubspot unique_app_id field values",
      "required": false
    },
    "MITOL_HUBSPOT_API_PRIVATE_TOKEN": {
      "description": "Hubspot private token to authenticate with API",
      "required": false
    },
    "MITOL_HUBSPOT_API_RETRIES": {
      "description": "Number of times to retry a failed hubspot API request",
      "required": false
    },
    "MITXPRO_ADMIN_EMAIL": {
      "description": "E-mail to send 500 reports to.",
      "required": true
    },
    "MITXPRO_BASE_URL": {
      "description": "Base url for the application in the format PROTOCOL://HOSTNAME[:PORT]",
      "required": true
    },
    "MITXPRO_DB_CONN_MAX_AGE": {
      "description": "Maximum age of connection to Postgres in seconds",
      "required": false
    },
    "MITXPRO_DB_DISABLE_SSL": {
      "description": "Disables SSL to postgres if set to True",
      "required": false
    },
    "MITXPRO_DB_DISABLE_SS_CURSORS": {
      "description": "Disables Postgres server side cursors",
      "required": false
    },
    "MITXPRO_EMAIL_BACKEND": {
      "description": "The default email backend to use for outgoing email. This is used in some places by django itself. See `NOTIFICATION_EMAIL_BACKEND` for the backend used for most application emails.",
      "required": false
    },
    "MITXPRO_EMAIL_HOST": {
      "description": "Outgoing e-mail hostname",
      "required": false
    },
    "MITXPRO_EMAIL_PASSWORD": {
      "description": "Outgoing e-mail auth password",
      "required": false
    },
    "MITXPRO_EMAIL_PORT": {
      "description": "Outgoing e-mail port",
      "required": false
    },
    "MITXPRO_EMAIL_TLS": {
      "description": "Outgoing e-mail TLS setting",
      "required": false
    },
    "MITXPRO_EMAIL_USER": {
      "description": "Outgoing e-mail auth username",
      "required": false
    },
    "MITXPRO_ENVIRONMENT": {
      "description": "The execution environment that the app is in (e.g. dev, staging, prod)",
      "required": true
    },
    "MITXPRO_FROM_EMAIL": {
      "description": "E-mail to use for the from field",
      "required": false
    },
    "MITXPRO_LOG_HOST": {
      "description": "Remote syslog server hostname",
      "required": false
    },
    "MITXPRO_LOG_HOST_PORT": {
      "description": "Remote syslog server port",
      "required": false
    },
    "MITXPRO_LOG_LEVEL": {
      "description": "The log level default",
      "required": false
    },
    "MITXPRO_NOTIFICATION_EMAIL_BACKEND": {
      "description": "The email backend to use for application emails",
      "required": false
    },
    "MITXPRO_REGISTRATION_ACCESS_TOKEN": {
      "description": "Access token to secure Open edX registration API with",
      "required": false
    },
    "MITXPRO_REPLY_TO_ADDRESS": {
      "description": "E-mail to use for reply-to address of emails",
      "required": false
    },
    "MITXPRO_SECURE_SSL_HOST": {
      "description": "Hostame to redirect non-secure requests to. Overrides value from HOST header.",
      "required": false
    },
    "MITXPRO_SECURE_SSL_REDIRECT": {
      "description": "Application-level SSL redirect setting.",
      "required": false
    },
    "MITXPRO_SITE_ID": {
      "description": "The default site id for django sites framework",
      "required": false
    },
    "MITXPRO_SUPPORT_EMAIL": {
      "description": "Email address listed for customer support",
      "required": false
    },
    "MITXPRO_USE_S3": {
      "description": "Use S3 for storage backend (required on Heroku)",
      "required": false
    },
    "OAUTH2_PROVIDER_ALLOWED_REDIRECT_URI_SCHEMES": {
      "description": "List of schemes allowed for oauth2 redirect URIs",
      "required": false
    },
    "OPENEDX_API_BASE_URL": {
      "description": "The base URL for the Open edX API",
      "required": true
    },
    "OPENEDX_API_CLIENT_ID": {
      "description": "The OAuth2 client id to connect to Open edX with",
      "required": true
    },
    "OPENEDX_API_CLIENT_SECRET": {
      "description": "The OAuth2 client secret to connect to Open edX with",
      "required": true
    },
    "OPENEDX_BASE_REDIRECT_URL": {
      "description": "The base redirect URL for an OAuth Application for the Open edX API",
      "required": false
    },
    "OPENEDX_OAUTH_APP_NAME": {
      "description": "The 'name' value for the Open edX OAuth Application",
      "required": true
    },
    "OPENEDX_OAUTH_PROVIDER": {
      "description": "Social auth oauth provider backend name",
      "required": false
    },
    "OPENEDX_SERVICE_WORKER_API_TOKEN": {
      "description": "Active access token with staff level permissions to use with OpenEdX API client for service tasks",
      "required": false
    },
    "OPENEDX_SERVICE_WORKER_USERNAME": {
      "description": "Username of the user whose token has been set in OPENEDX_SERVICE_WORKER_API_TOKEN",
      "required": false
    },
    "OPENEDX_SOCIAL_LOGIN_PATH": {
      "description": "Open edX social auth login url",
      "required": false
    },
    "OPENEDX_TOKEN_EXPIRES_HOURS": {
      "description": "The number of hours until an access token for the Open edX API expires",
      "required": false
    },
    "PGBOUNCER_DEFAULT_POOL_SIZE": {
      "value": "50"
    },
    "PGBOUNCER_MIN_POOL_SIZE": {
      "value": "50"
    },
    "POSTHOG_API_HOST": {
      "description": "API host for PostHog",
      "required": false
    },
    "POSTHOG_ENABLED": {
      "description": "Whether PostHog is enabled",
      "required": false
    },
    "POSTHOG_FEATURE_FLAG_REQUEST_TIMEOUT_MS": {
      "description": "Timeout(MS) for PostHog feature flag requests.",
      "required": false
    },
    "POSTHOG_MAX_RETRIES": {
      "description": "Number of times that requests to PostHog should be retried after failing.",
      "required": false
    },
    "POSTHOG_PROJECT_API_KEY": {
      "description": "API token to communicate with PostHog",
      "required": false
    },
    "RECAPTCHA_SECRET_KEY": {
      "description": "The ReCaptcha secret key",
      "required": false
    },
    "RECAPTCHA_SITE_KEY": {
      "description": "The ReCaptcha site key",
      "required": false
    },
    "REDISCLOUD_URL": {
      "description": "RedisCloud connection url",
      "required": false
    },
    "REDIS_URL": {
      "description": "Redis URL for non-production use",
      "required": false
    },
    "REFUND_REQUEST_WORKSHEET_ID": {
      "description": "ID of the worksheet within the enrollment change request spreadsheet that contains enrollment refund requests",
      "required": false
    },
    "REPAIR_COURSEWARE_USERS_FREQUENCY": {
      "description": "How many seconds between repairing courseware records for faulty users",
      "required": false
    },
    "RETRY_FAILED_EDX_ENROLLMENT_FREQUENCY": {
      "description": "How many seconds between retrying failed edX enrollments",
      "required": false
    },
    "ROBOTS_CACHE_TIMEOUT": {
      "description": "How long the robots.txt file should be cached",
      "required": false
    },
    "SECRET_KEY": {
      "description": "Django secret key.",
      "generator": "secret",
      "required": true
    },
    "SENTRY_DSN": {
      "description": "The connection settings for Sentry",
      "required": false
    },
    "SENTRY_LOG_LEVEL": {
      "description": "The log level for Sentry",
      "required": false
    },
    "SHEETS_ADMIN_EMAILS": {
      "description": "Comma-separated list of emails for users that should be added as an editor for all newly created Sheets",
      "required": false
    },
    "SHEETS_DATE_FORMAT": {
      "description": "Python strptime format for datetime columns in enrollment management spreadsheets",
      "required": false
    },
    "SHEETS_DATE_ONLY_FORMAT": {
      "description": "Python strptime format for date columns (no time) in enrollment management spreadsheets",
      "required": false
    },
    "SHEETS_DATE_TIMEZONE": {
      "description": "The name of the timezone that should be assumed for date/time values in spreadsheets. Choose from a value in the TZ database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).",
      "required": false
    },
    "SHEETS_DEFERRAL_FIRST_ROW": {
      "description": "The first row (as it appears in the spreadsheet) of data that our scripts should consider processing in the deferral request spreadsheet",
      "required": false
    },
    "SHEETS_MONITORING_FREQUENCY": {
      "description": "The frequency that the Drive folder should be checked for bulk coupon Sheets that need processing",
      "required": false
    },
    "SHEETS_REFUND_COMPLETED_DATE_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains the row completion date",
      "required": false
    },
    "SHEETS_REFUND_ERROR_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains row processing error messages",
      "required": false
    },
    "SHEETS_REFUND_FIRST_ROW": {
      "description": "The first row (as it appears in the spreadsheet) of data that our scripts should consider processing in the refund request spreadsheet",
      "required": false
    },
    "SHEETS_REFUND_PROCESSOR_COL": {
      "description": "The zero-based index of the enrollment change sheet column that contains the user that processed the row",
      "required": false
    },
    "SHEETS_REFUND_SKIP_ROW_COL": {
      "description": "The zero-based index of the enrollment change sheet column that indicates whether the row should be skipped",
      "required": false
    },
    "SHEETS_TASK_OFFSET": {
      "description": "How many seconds to wait in between executing different Sheets tasks in series",
      "required": false
    },
    "SITE_NAME": {
      "description": "Name of the site. e.g MIT xPRO",
      "required": false
    },
    "USE_X_FORWARDED_HOST": {
      "description": "Set HOST header to original domain accessed by user",
      "required": false
    },
    "VOUCHER_COMPANY_ID": {
      "description": "Company ID for vouchers",
      "required": false
    },
    "VOUCHER_DOMESTIC_AMOUNT_KEY": {
      "description": "Amount key for domestic vouchers",
      "required": false
    },
    "VOUCHER_DOMESTIC_COURSE_KEY": {
      "description": "Course key for domestic vouchers",
      "required": false
    },
    "VOUCHER_DOMESTIC_CREDITS_KEY": {
      "description": "Credits key for domestic vouchers",
      "required": false
    },
    "VOUCHER_DOMESTIC_DATES_KEY": {
      "description": "Dates key for domestic vouchers",
      "required": false
    },
    "VOUCHER_DOMESTIC_EMPLOYEE_ID_KEY": {
      "description": "Voucher employee key ID for domestic vouchers",
      "required": false
    },
    "VOUCHER_DOMESTIC_EMPLOYEE_KEY": {
      "description": "Employee key for domestic vouchers",
      "required": false
    },
    "VOUCHER_DOMESTIC_KEY": {
      "description": "Voucher key for domestic vouchers",
      "required": false
    },
    "VOUCHER_INTERNATIONAL_COURSE_NAME_KEY": {
      "description": "Course name key for international vouchers",
      "required": false
    },
    "VOUCHER_INTERNATIONAL_COURSE_NUMBER_KEY": {
      "description": "Course number key for international vouchers",
      "required": false
    },
    "VOUCHER_INTERNATIONAL_DATES_KEY": {
      "description": "Dates key for international vouchers",
      "required": false
    },
    "VOUCHER_INTERNATIONAL_EMPLOYEE_ID_KEY": {
      "description": "Voucher employee key ID for international vouchers",
      "required": false
    },
    "VOUCHER_INTERNATIONAL_EMPLOYEE_KEY": {
      "description": "Employee key for international vouchers",
      "required": false
    },
    "WAGTAIL_CACHE_BACKEND": {
      "description": "The caching backend to be used for Wagtail image renditions",
      "required": false
    },
    "WAGTAIL_CACHE_MAX_ENTRIES": {
      "description": "The maximum number of cache entries for Wagtail images",
      "required": false
    },
    "WAGTAIL_CACHE_URL": {
      "description": "URL for Wagtail image renditions cache",
      "required": false
    },
    "ZENDESK_HELP_WIDGET_ENABLED": {
      "description": "Enabled/disable state for Zendesk web help widget.",
      "required": false
    },
    "ZENDESK_HELP_WIDGET_KEY": {
      "description": "Represents the key for Zendesk web help widget.",
      "required": false
    }
  },
  "keywords": ["Django", "Python", "MIT", "Office of Digital Learning"],
  "name": "mitxpro",
  "repository": "https://github.com/mitodl/mitxpro",
  "scripts": {
    "postdeploy": "./manage.py migrate --noinput"
  },
  "success_url": "/",
  "website": "https://github.com/mitodl/mitxpro"
}
