x-environment: &py-environment
  NODE_ENV: "production"
  DEV_ENV: "True" # necessary to have nginx connect to web container
  SECRET_KEY: local_unsafe_key
  DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
  MITOL_DIGITAL_CREDENTIALS_HMAC_SECRET: test-hmac-secret
  MITXPRO_BASE_URL: ${MITXPRO_BASE_URL:-http://xpro.odl.local:8053}
  MITXPRO_SECURE_SSL_REDIRECT: "False"
  MITXPRO_DB_DISABLE_SSL: "True"
  MITXPRO_ADMIN_EMAIL: admin@localhost
  MITOL_DIGITAL_CREDENTIALS_AUTH_TYPE: xpro
  ELASTICSEARCH_URL: elastic:9200
  CELERY_TASK_ALWAYS_EAGER: "False"
  REDIS_URL: redis://redis:6379/4
  DOCKER_HOST: ${DOCKER_HOST:-missing}
  WEBPACK_DEV_SERVER_HOST: ${WEBPACK_DEV_SERVER_HOST:-localhost}

x-extra-hosts: &default-extra-hosts
  - "edx.odl.local:${OPENEDX_IP:-172.22.0.1}"
  - "host.docker.internal:host-gateway"

services:
  db:
    image: postgres:17.1
    environment:
      POSTGRES_PASSWORD: postgres # pragma: allowlist secret
    ports:
      - "5432"

  redis:
    image: redis:7.4.2
    ports:
      - "6379"

  nginx:
    image: nginx:1.27.3
    ports:
      - "8053:8053"
    links:
      - web
    networks:
      default:
        aliases:
          # this ensures that containers route this hostname back to the web app
          - "xpro.odl.local"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      /bin/bash -c '
      sleep 3 &&
      python3 manage.py collectstatic --noinput &&
      python3 manage.py migrate --noinput &&
      uwsgi uwsgi.ini --honour-stdin'
    stdin_open: true
    tty: true
    ports:
      - "8051:8051"
    environment:
      <<: *py-environment
      PORT: 8051
    env_file: .env
    links:
      - db
      - redis
    extra_hosts: *default-extra-hosts

  watch:
    image: node:20.18.1
    working_dir: /src
    command: >
      /bin/bash -c './webpack_dev_server.sh --install'
    ports:
      - "8052:8052"
    environment:
      PUBLIC_PATH: http://${MIT_XPRO_HOSTNAME:-xpro.odl.local}:8053/
      NODE_ENV: "production"
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      CONTAINER_NAME: "watch"
    env_file: .env

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    environment: *py-environment
    env_file: .env
    command: >
      /bin/bash -c '
      sleep 3;
      celery -A mitxpro.celery:app worker -B -l ${MITXPRO_LOG_LEVEL:-INFO}'
    links:
      - db
      - redis
    extra_hosts: *default-extra-hosts
